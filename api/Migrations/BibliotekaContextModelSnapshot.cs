// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

namespace api.Migrations
{
    [DbContext(typeof(BibliotekaContext))]
    partial class BibliotekaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("KnjigaPosetilac", b =>
                {
                    b.Property<int>("knjigeid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("korisniciid")
                        .HasColumnType("INTEGER");

                    b.HasKey("knjigeid", "korisniciid");

                    b.HasIndex("korisniciid");

                    b.ToTable("KnjigaPosetilac");
                });

            modelBuilder.Entity("api.Models.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ime")
                        .HasColumnType("TEXT");

                    b.Property<string>("prezime")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("api.Models.Knjiga", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("autorid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("naziv")
                        .HasColumnType("TEXT");

                    b.Property<int>("stanje")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("autorid");

                    b.ToTable("Knjige");
                });

            modelBuilder.Entity("api.Models.Korisnik", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Korisnici");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");
                });

            modelBuilder.Entity("api.Models.Rezervacija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("istek")
                        .HasColumnType("TEXT");

                    b.Property<int>("knjigaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("korisnikId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("odobrena")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("api.Models.Bibliotekar", b =>
                {
                    b.HasBaseType("api.Models.Korisnik");

                    b.HasDiscriminator().HasValue("Bibliotekar");
                });

            modelBuilder.Entity("api.Models.Posetilac", b =>
                {
                    b.HasBaseType("api.Models.Korisnik");

                    b.HasDiscriminator().HasValue("Posetilac");
                });

            modelBuilder.Entity("KnjigaPosetilac", b =>
                {
                    b.HasOne("api.Models.Knjiga", null)
                        .WithMany()
                        .HasForeignKey("knjigeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Posetilac", null)
                        .WithMany()
                        .HasForeignKey("korisniciid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.Knjiga", b =>
                {
                    b.HasOne("api.Models.Autor", "autor")
                        .WithMany()
                        .HasForeignKey("autorid");

                    b.Navigation("autor");
                });
#pragma warning restore 612, 618
        }
    }
}
